{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Main/Welcome.jsx","components/Main/Connected.jsx","components/Main/NoticeNoArtifact.jsx","components/Main/NoticeWrongNetwork.jsx","components/Main/Events.jsx","components/Main/Popup/PopupError.jsx","components/Main/Popup/PopupSuccess.jsx","components/Main/AdminPanel.jsx","components/Main/Popup/PopupVoter.jsx","components/Main/Popup/PopupProposal.jsx","components/Main/Popup/PopupWinner.jsx","components/Main/UserPanel.jsx","components/Main/index.jsx","components/Footer.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","console","error","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","Welcome","Connected","props","useState","workflowStatus","setWorkflowStatus","isWl","setIsWl","isWL","i","whitelist","length","userAddress","toString","style","fontWeight","contractAddress","adminAddress","NoticeNoArtifact","className","NoticeWrongNetwork","Events","workflowList","setWorkflowList","proposalList","setProposalList","votesList","setVotesList","workflowStatusChangeEvents","returnValues","_previousStatus","_newStatus","allAboutProposals","gatheredDetailsProposals","index","proposalRegisteredEvents","blockNumber","getBlock","timestamp","date","Date","toUTCString","getTransaction","transactionHash","from","object","_proposalId","_description","dateUTC","sender","push","allAboutVotes","gatheredDetailsVotes","index2","votedEvents","_voterAddress","workflowStatusEventsDisplay","map","workflowEvent","proposalsDisplay","proposal","k","padding","fontSize","votesDisplay","vote","l","j","PopupError","popupDisplay","isErrorUser","textAlign","errorUser","isErrorAdmin","errorAdmin","onClick","togglePopupError","PopupSuccess","isSuccessUser","successUser","isSuccessAdmin","successAdmin","togglePopupSuccess","AdminPanel","voterAddress","setVoterAddress","setIsErrorAdmin","setErrorAdmin","setIsSuccessAdmin","setSuccessAdmin","isOpenError","setIsOpenError","isOpenSuccess","setIsOpenSuccess","handleClickAddVoterButton","utils","isAddress","methods","addVoter","send","transac","log","VoterRegistered","handleClickStartProposalsRegistration","startProposalsRegistering","WorkflowStatusChange","handleClickEndProposalsRegistration","endProposalsRegistering","handleClickStartVotingSession","startVotingSession","handleClickEndVotingSession","endVotingSession","marginTop","width","placeholder","onChange","target","marginLeft","PopupVoter","isEthAddress","isVoterWl","hasVoted","whichProposal","togglePopupGetVoter","PopupProposal","isProposalValid","oneProposal","proposalDescription","voteCount","togglePopupGetProposal","PopupWinner","togglePopupWinner","winnerProposalId","winnerDescription","winnerVoteCount","UserPanel","description","setDescription","ID","setID","isOpenGetVoter","setIsOpenGetVoter","isOpenGetProposal","setIsOpenGetProposal","setIsVoterWl","setHasVoted","setWhichProposal","setIsEthAddress","setOneProposal","setIsProposalValid","setProposalDescription","setVoteCount","setIsErrorUser","setErrorUser","setIsSuccessUser","setSuccessUser","isOpenWinner","setIsOpenWinner","setWinnerDescription","setWinnerVoteCount","setWinnerProposalId","isWinner","setIsWinner","handleClickRegisterProposals","addProposal","ProposalRegistered","handleClickVote","Number","setVote","Voted","handleClickGetVoter","getVoter","call","isRegistered","votedProposalId","handleClickGetOneProposal","getOneProposal","handleClickGetWinner","winningProposalID","winningProposal","winner","alignContent","Intro","setUserAddress","setContractAddress","setAdminAddress","setWorkflowStatusChangeEvents","setWhitelist","setProposalRegisteredEvents","setVotedEvents","options1","fromBlock","toBlock","options2","owner","getPastEvents","workflowEvents","event","voterRegisteredEvents","wlAddresses","proposalEvents","votes","getDetails","Link","uri","text","href","rel","Footer","App","id","Main","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0zqXAIeA,G,OAFIC,2B,kDCFbC,EACE,OAGFC,EAAe,CACnBC,SAAU,KACVC,KAAM,KACNC,SAAU,KACVC,UAAW,KACXC,SAAU,MAGNC,EAAU,SAACC,EAAOC,GACtB,IAAQC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACd,GAAQD,IACDV,EACH,OAAO,2BAAKQ,GAAUG,GAEtB,MAAM,IAAIC,MAAM,kC,OC+CPC,MA5Df,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAA0BC,qBAAWR,EAASN,GAA9C,mBAAOO,EAAP,KAAcQ,EAAd,KAEMC,EAAOC,sBAAW,iDAAC,WAAOhB,GAAP,+FACnBA,EADmB,wBAEfC,EAAO,IAAIgB,IAAKA,IAAKC,eAAiB,uBAFvB,SAGEjB,EAAKkB,IAAIC,kBAHX,cAGflB,EAHe,gBAIGD,EAAKkB,IAAIE,IAAIC,QAJhB,OAIfnB,EAJe,OAKboB,EAAQvB,EAARuB,IAER,IACEC,EAAUxB,EAASyB,SAAStB,GAAWqB,QACvCpB,EAAW,IAAIH,EAAKkB,IAAIO,SAASH,EAAKC,GACtC,MAAOG,GACPC,QAAQC,MAAMF,GAEhBb,EAAS,CACPN,KAAMV,EACNW,KAAM,CAAET,WAAUC,OAAMC,WAAUC,YAAWC,WAAUoB,aAfpC,4CAAD,sDAkBrB,IA2BH,OAzBAM,qBAAU,WACR,IAAMC,EAAO,iDAAG,8FACd,IACQ/B,EAAWgC,EAAQ,KACzBjB,EAAKf,GACL,MAAO2B,GACPC,QAAQC,MAAMF,GALF,2CAAH,qDASbI,MACC,CAAChB,IAEJe,qBAAU,WACR,IAAMG,EAAS,CAAC,eAAgB,mBAC1BC,EAAe,WACnBnB,EAAKT,EAAMN,WAIb,OADAiC,EAAOE,SAAQ,SAACC,GAAD,OAAOC,OAAOC,SAASC,GAAGH,EAAGF,MACrC,WACLD,EAAOE,SAAQ,SAACC,GAAD,OAAOC,OAAOC,SAASE,eAAeJ,EAAGF,SAEzD,CAACnB,EAAMT,EAAMN,WAGd,cAAC,EAAWyC,SAAZ,CACEC,MAAO,CACLpC,QACAQ,YAHJ,SAMGF,KCvDQ+B,EAFA,kBAAMC,qBAAWhD,ICejBiD,MAlBf,WACE,OACE,gCAGE,0EACA,uECyDSC,MA7Df,SAAmBC,GACjB,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAwBF,oBAAS,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAgCA,OA9BAtB,qBAAU,WAER,IADA,IAAIuB,GAAO,EACFC,EAAI,EAAGA,EAAIP,EAAMQ,UAAUC,OAAQF,IACtCP,EAAMQ,UAAUD,KAAOP,EAAMU,YAAYC,aAC3CL,GAAO,GAETD,EAAQC,GAGV,OAAQN,EAAME,gBACZ,IAAK,IACHC,EAAkB,sBAClB,MACF,IAAK,IACHA,EAAkB,kCAClB,MACF,IAAK,IACHA,EAAkB,gCAClB,MACF,IAAK,IACHA,EAAkB,0BAClB,MACF,IAAK,IACHA,EAAkB,wBAClB,MACF,QACEA,EAAkB,kCAErB,CAACH,EAAME,eAAgBF,EAAMQ,UAAWR,EAAMU,cAG/C,8BACE,+BACE,kDACmB,IACjB,sBAAME,MAAO,CAAEC,WAAY,QAA3B,SAAsCb,EAAMU,iBAE9C,8CACc,sBAAME,MAAO,CAAEC,WAAY,QAA3B,mBAAyCT,QAEvD,0DAC2B,IACzB,sBAAMQ,MAAO,CAAEC,WAAY,QAA3B,SAAsCb,EAAMc,qBAE9C,gDACiB,IACf,sBAAMF,MAAO,CAAEC,WAAY,QAA3B,SAAsCb,EAAMe,kBAE9C,8DAC+B,IAC7B,sBAAMH,MAAO,CAAEC,WAAY,QAA3B,SAAsCX,aC9CjCc,MAVf,WACE,OACE,0DACiB,sBAAMC,UAAU,OAAhB,oBADjB,0GCOWC,MATf,WACE,OACE,8HCsOWC,MAtOf,SAAgBnB,GACd,MAAwCC,mBAAS,IAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KACA,EAAwCpB,mBAAS,IAAjD,mBAAOqB,EAAP,KAAqBC,EAArB,KACA,EAAkCtB,mBAAS,IAA3C,mBAAOuB,EAAP,KAAkBC,EAAlB,KAEA1C,qBAAU,WACR,IAAI2C,EAA6B1B,EAAM0B,2BAEnCA,GAAoE,IAAtCA,EAA2BjB,QAC3DiB,EAA2B,GAAGC,aAAaC,gBACzC,qBACFF,EAA2B,GAAGC,aAAaE,WACzC,kCAEFH,GACsC,IAAtCA,EAA2BjB,QAE3BiB,EAA2B,GAAGC,aAAaC,gBACzC,qBACFF,EAA2B,GAAGC,aAAaE,WACzC,iCACFH,EAA2B,GAAGC,aAAaC,gBACzC,iCACFF,EAA2B,GAAGC,aAAaE,WACzC,gCAEFH,GACsC,IAAtCA,EAA2BjB,QAE3BiB,EAA2B,GAAGC,aAAaC,gBACzC,qBACFF,EAA2B,GAAGC,aAAaE,WACzC,iCACFH,EAA2B,GAAGC,aAAaC,gBACzC,iCACFF,EAA2B,GAAGC,aAAaE,WACzC,+BACFH,EAA2B,GAAGC,aAAaC,gBACzC,+BACFF,EAA2B,GAAGC,aAAaE,WACzC,0BAEFH,GACsC,IAAtCA,EAA2BjB,SAE3BiB,EAA2B,GAAGC,aAAaC,gBACzC,qBACFF,EAA2B,GAAGC,aAAaE,WACzC,iCACFH,EAA2B,GAAGC,aAAaC,gBACzC,iCACFF,EAA2B,GAAGC,aAAaE,WACzC,+BACFH,EAA2B,GAAGC,aAAaC,gBACzC,+BACFF,EAA2B,GAAGC,aAAaE,WACzC,yBACFH,EAA2B,GAAGC,aAAaC,gBACzC,yBACFF,EAA2B,GAAGC,aAAaE,WACzC,wBAGJ,IAAIC,EAAoB,GAClBC,EAAwB,iDAAG,wGAEzBC,EAAQ,EAFiB,YAG7BA,EAAQhC,EAAMiC,yBAAyBxB,QAHV,wBAMzByB,EAAclC,EAAMiC,yBAAyBD,GAAOE,YAN3B,SAONlC,EAAM9C,KAAKkB,IAAI+D,SAASD,GAPlB,cAOzBE,EAPyB,OAOgCA,UACzDC,EAAO,IAAIC,KAAiB,IAAZF,GAAkBG,cART,SAUrBvC,EAAM9C,KAAKkB,IAAIoE,eACnBxC,EAAMiC,yBAAyBD,GAAOS,iBAXb,OASzBC,EATyB,OAa3BA,KACEC,EAAS,CACXC,YACE5C,EAAMiC,yBAAyBD,GAAOL,aAAaiB,YACrDC,aACE7C,EAAMiC,yBAAyBD,GAAOL,aAAakB,aACrDC,QAAST,EACTU,OAAQL,GAEVZ,EAAkBkB,KAAKL,GAtBM,QAI7BX,IAJ6B,uBAwB/BT,EAAgBO,GAxBe,4CAAH,qDA2B1BmB,EAAgB,GACdC,EAAoB,iDAAG,sGAClBC,EAAS,EADS,YACNA,EAASnD,EAAMoD,YAAY3C,QADrB,wBAErByB,EAAclC,EAAMoD,YAAYD,GAAQjB,YAFnB,SAGFlC,EAAM9C,KAAKkB,IAAI+D,SAASD,GAHtB,OAGrBE,EAHqB,OAGoCA,UACzDC,EAAO,IAAIC,KAAiB,IAAZF,GAAkBG,cAClCI,EAAS,CACXC,YAAa5C,EAAMoD,YAAYD,GAAQxB,aAAaiB,YACpDS,cAAerD,EAAMoD,YAAYD,GAAQxB,aAAa0B,cACtDP,QAAST,GAEXY,EAAcD,KAAKL,GAVM,OAC6BQ,IAD7B,uBAY3B1B,EAAawB,GAZc,4CAAH,qDAetBjD,EAAMiC,yBAAyBxB,OAAS,GAC1CsB,IAGE/B,EAAMoD,YAAY3C,OAAS,GAC7ByC,IAGF7B,EAAgBK,KACf,CACD1B,EAAM0B,2BACN1B,EAAMiC,yBACNjC,EAAMQ,UACNR,EAAMoD,YACNpD,EAAM9C,OAGR,IAAIoG,EACF,kFAC0C,IACxC,sBAAM1C,MAAO,CAAEC,WAAY,QAA3B,iCAFF,eAMEO,GAAgBA,EAAaX,OAAS,IACxC6C,EACE,6BACGlC,EAAamC,KAAI,SAACC,EAAejD,GAAhB,OAChB,qBAAIK,MAAO,CAAEC,WAAY,QAAzB,UACG2C,EAAc7B,aAAaC,gBAD9B,gBACkD,IAC/C4B,EAAc7B,aAAaE,aAFUtB,SAShD,IAAIkD,EAAmB,oEAEnBnC,EAAab,OAAS,IACxBgD,EACE,6BACGnC,EAAaiC,KAAI,SAACG,EAAUC,GAAX,OAChB,qBAAI/C,MAAO,CAAEC,WAAY,QAAzB,UACG6C,EAASd,YADZ,iBAC6Bc,EAASb,aACpC,0BAASjC,MAAO,CAAEgD,QAAS,GAA3B,UACE,yBACEhD,MAAO,CAAEC,WAAY,SAAUgD,SAAU,GAAID,QAAS,GADxD,sBAKA,oBAAGhD,MAAO,CAAEC,WAAY,UAAxB,mBAA2C6C,EAASX,UACpD,oBAAGnC,MAAO,CAAEC,WAAY,UAAxB,mBAA2C6C,EAASZ,gBAThBa,SAiBhD,IAAIG,EAAe,gEAsBnB,OApBItC,EAAUf,OAAS,IACrBqD,EACE,6BACGtC,EAAU+B,KAAI,SAACQ,EAAMC,GAAP,OACb,qBAAIpD,MAAO,CAAEC,WAAY,QAAzB,UACGkD,EAAKV,cADR,iBAC2BU,EAAKnB,YAC9B,0BAAShC,MAAO,CAAEgD,QAAS,GAA3B,UACE,yBACEhD,MAAO,CAAEC,WAAY,SAAUgD,SAAU,GAAID,QAAS,GADxD,sBAKA,oBAAGhD,MAAO,CAAEC,WAAY,UAAxB,mBAA2CkD,EAAKjB,gBARZkB,SAiB9C,qCACE,6DACA,2DAEA,oCACE,8DACA,2EACCV,KAGH,oCACE,gDACA,wEACA,6BACGtD,EAAMQ,UAAU+C,KAAI,SAAC9E,EAASwF,GAAV,OACnB,6BAAaxF,GAAJwF,WAKf,oCACE,gDACA,0CACW,sBAAMrD,MAAO,CAAEC,WAAY,QAA3B,gBADX,4CAIC4C,KAGH,oCACE,4CACA,gDACiB,sBAAM7C,MAAO,CAAEC,WAAY,QAA3B,mBADjB,OAGCiD,SClMMI,EAhCI,SAAClE,GAClB,IAAImE,EAgBJ,OAfInE,EAAMoE,YACRD,EACE,qBAAKvD,MAAO,CAAEyD,UAAW,SAAUR,SAAU,UAA7C,SACE,8BAAI7D,EAAMsE,UAAV,SAIKtE,EAAMuE,eACfJ,EACE,qBAAKvD,MAAO,CAAEyD,UAAW,UAAzB,SACE,kCAAKrE,EAAMwE,WAAX,UAMJ,qBAAKvD,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAMA,UAAU,aAAawD,QAASzE,EAAM0E,iBAA5C,eAGA,qBAAKzD,UAAU,0BAAf,SACE,uEAEDkD,QCMMQ,EAhCM,SAAC3E,GACpB,IAAImE,EAeJ,OAdInE,EAAM4E,cACRT,EACE,qBAAKvD,MAAO,CAAEyD,UAAW,SAAUR,SAAU,UAA7C,SACE,4BAAI7D,EAAM6E,gBAGL7E,EAAM8E,iBACfX,EACE,qBAAKvD,MAAO,CAAEyD,UAAW,SAAUR,SAAU,UAA7C,SACE,kCAAK7D,EAAM+E,mBAMf,qBAAK9D,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAMA,UAAU,aAAawD,QAASzE,EAAMgF,mBAA5C,eAGA,qBAAK/D,UAAU,0BAAf,SACE,qFAEF,oBAAIA,UAAU,aACbkD,QC8NMc,MApPf,SAAoBjF,GAClB,MAAwCC,mBAAS,IAAjD,mBAAOiF,EAAP,KAAqBC,EAArB,KACA,EAAwClF,mBAAS,MAAjD,mBAAOsE,EAAP,KAAqBa,EAArB,KACA,EAAoCnF,mBAAS,IAA7C,mBAAOuE,EAAP,KAAmBa,EAAnB,KACA,EAA4CpF,mBAAS,MAArD,mBAAO6E,EAAP,KAAuBQ,EAAvB,KACA,EAAwCrF,mBAAS,IAAjD,mBAAO8E,EAAP,KAAqBQ,EAArB,KACA,EAAsCtF,oBAAS,GAA/C,mBAAOuF,EAAP,KAAoBC,EAApB,KACA,EAA0CxF,oBAAS,GAAnD,mBAAOyF,EAAP,KAAsBC,EAAtB,KAEMjB,EAAmB,WACvBe,GAAgBD,GACZA,IACFJ,EAAgB,MAChBC,EAAc,MAIZL,EAAqB,WACzBW,GAAkBD,GACdA,IACFJ,EAAkB,MAClBC,EAAgB,MAIdK,EAAyB,iDAAG,kGAC5B5F,EAAM9C,KAAK2I,MAAMC,UAAUZ,GADC,0CAGNlF,EAAM3C,SAAS0I,QAClCC,SAASd,GACTe,KAAK,CAAEvD,KAAM1C,EAAM7C,SAAS,KALH,OAGtB+I,EAHsB,OAO5BrH,QAAQsH,IACN,oCACAD,EAAQhH,OAAOkH,gBAAgBzE,aAAa0B,eAE9CiC,GAAkB,GAClBC,EACE,8CACKW,EAAQhH,OAAOkH,gBAAgBzE,aAAa0B,gBAEnD2B,IAhB4B,kDAkB5BnG,QAAQsH,IAAR,MACAf,GAAgB,GAChBC,EACE,uFAEFX,IAvB4B,gCA0B9BU,GAAgB,GAChBC,EAAc,wCACdX,IA5B8B,QA+BhCS,EAAgB,IA/BgB,0DAAH,qDAkCzBkB,EAAqC,iDAAG,uHAEpBrG,EAAM3C,SAAS0I,QAClCO,4BACAL,KAAK,CAAEvD,KAAM1C,EAAM7C,SAAS,KAJW,OAEpC+I,EAFoC,OAK1CrH,QAAQsH,IACN,8BACAD,EAAQhH,OAAOqH,qBAAqB5E,aAAaE,YAEnDyD,GAAkB,GAClBC,EACE,wCACKW,EAAQhH,OAAOqH,qBAAqB5E,aAAaE,aAExDmD,IAd0C,kDAgB1CnG,QAAQsH,IAAR,MACAf,GAAgB,GAChBC,EACE,wEAEFX,IArB0C,0DAAH,qDAyBrC8B,EAAmC,iDAAG,uHAElBxG,EAAM3C,SAAS0I,QAClCU,0BACAR,KAAK,CAAEvD,KAAM1C,EAAM7C,SAAS,KAJS,OAElC+I,EAFkC,OAKxCrH,QAAQsH,IACN,8BACAD,EAAQhH,OAAOqH,qBAAqB5E,aAAaE,YAEnDyD,GAAkB,GAClBC,EACE,wCACKW,EAAQhH,OAAOqH,qBAAqB5E,aAAaE,aAExDmD,IAdwC,kDAgBxCnG,QAAQsH,IAAR,MACAf,GAAgB,GAChBC,EACE,wEAEFX,IArBwC,0DAAH,qDAyBnCgC,EAA6B,iDAAG,uHAEZ1G,EAAM3C,SAAS0I,QAClCY,qBACAV,KAAK,CAAEvD,KAAM1C,EAAM7C,SAAS,KAJG,OAE5B+I,EAF4B,OAKlCrH,QAAQsH,IACN,8BACAD,EAAQhH,OAAOqH,qBAAqB5E,aAAaE,YAEnDyD,GAAkB,GAClBC,EACE,wCACKW,EAAQhH,OAAOqH,qBAAqB5E,aAAaE,aAExDmD,IAdkC,kDAgBlCnG,QAAQsH,IAAR,MACAf,GAAgB,GAChBC,EACE,wEAEFX,IArBkC,0DAAH,qDAyB7BkC,EAA2B,iDAAG,uHAEV5G,EAAM3C,SAAS0I,QAClCc,mBACAZ,KAAK,CAAEvD,KAAM1C,EAAM7C,SAAS,KAJC,OAE1B+I,EAF0B,OAKhCrH,QAAQsH,IACN,8BACAD,EAAQhH,OAAOqH,qBAAqB5E,aAAaE,YAEnDyD,GAAkB,GAClBC,EACE,wCACKW,EAAQhH,OAAOqH,qBAAqB5E,aAAaE,aAExDmD,IAdgC,kDAgBhCnG,QAAQsH,IAAR,MACAf,GAAgB,GAChBC,EACE,wEAEFX,IArBgC,0DAAH,qDAyBjC,OACE,gCACE,8DACA,sBAAK9D,MAAO,CAAEkG,UAAW,IAAzB,UACE,mBAAGlG,MAAO,CAAEC,WAAY,QAAxB,6BACA,uBACED,MAAO,CAAEmG,MAAO,OAChBC,YAAa,uBACbrH,MAAOuF,EACP+B,SAAU,SAAC5H,GAAD,OAAO8F,EAAgB9F,EAAE6H,OAAOvH,UAE5C,wBACEiB,MAAO,CAAEuG,WAAY,GAAIJ,MAAO,OAChCtC,QAAS,WACPmB,KAHJ,wCAQCJ,GACC,cAAC,EAAD,CACEhB,WAAYA,EACZE,iBAAkBA,EAClBH,aAAcA,IAGjBmB,GACC,cAAC,EAAD,CACEX,aAAcA,EACdC,mBAAoBA,EACpBF,eAAgBA,OAItB,sBAAKlE,MAAO,CAAEkG,UAAW,IAAzB,UACE,mBAAGlG,MAAO,CAAEC,WAAY,QAAxB,2CACA,wBACED,MAAO,CAAEmG,MAAO,OAChBtC,QAAS,WACP4B,KAHJ,6CAUF,sBAAKzF,MAAO,CAAEkG,UAAW,IAAzB,UACE,mBAAGlG,MAAO,CAAEC,WAAY,QAAxB,yCACA,wBACED,MAAO,CAAEmG,MAAO,OAChBtC,QAAS,WACP+B,KAHJ,2CAUF,sBAAK5F,MAAO,CAAEkG,UAAW,IAAzB,UACE,mBAAGlG,MAAO,CAAEC,WAAY,QAAxB,mCACA,wBACED,MAAO,CAAEmG,MAAO,OAChBtC,QAAS,WACPiC,KAHJ,qCASF,sBAAK9F,MAAO,CAAEkG,UAAW,IAAzB,UACE,mBAAGlG,MAAO,CAAEC,WAAY,QAAxB,iCACA,wBACED,MAAO,CAAEmG,MAAO,OAChBtC,QAAS,WACPmC,KAHJ,mCASF,2BC1MSQ,EAzCI,SAACpH,GAClB,IAAImE,EA4BJ,OA3BInE,EAAMqH,aACRlD,EACE,qCACE,wBAAQlD,UAAU,cAAlB,6CACA,oBAAIA,UAAU,aACd,0DAC4B,IAC1B,sBAAML,MAAO,CAAEC,WAAY,QAA3B,mBAAyCb,EAAMsH,gBAEjD,oDACsB,IACpB,sBAAM1G,MAAO,CAAEC,WAAY,QAA3B,mBAAyCb,EAAMuH,eAEjD,uEACyC,IACvC,sBAAM3G,MAAO,CAAEC,WAAY,QAA3B,SAAsCb,EAAMwH,sBAIxCxH,EAAMqH,eAChBlD,EACE,mBAAGvD,MAAO,CAAEyD,UAAW,SAAUR,SAAU,UAA3C,6EAOF,qBAAK5C,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAMA,UAAU,aAAawD,QAASzE,EAAMyH,oBAA5C,eAGCtD,QCOMuD,EA1CO,SAAC1H,GACrB,IAAImE,EA6BJ,OA5BInE,EAAM2H,gBACRxD,EACE,qCACE,yBAAQlD,UAAU,cAAlB,8CACiCjB,EAAM4H,YADvC,mBAGA,oBAAI3G,UAAU,aACd,6CACe,IACb,sBACEL,MAAO,CAAEC,WAAY,QADvB,mBAEKb,EAAM6H,0BAEb,iDACmB,IACjB,sBAAMjH,MAAO,CAAEC,WAAY,QAA3B,SAAsCb,EAAM8H,kBAIxC9H,EAAM2H,kBAChBxD,EACE,sBAAKvD,MAAO,CAAEyD,UAAW,SAAUR,SAAU,UAA7C,UACE,8EACA,uDAA0B7D,EAAMiC,yBAAyBxB,cAM7D,qBAAKQ,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAMA,UAAU,aAAawD,QAASzE,EAAM+H,uBAA5C,eAGC5D,QCJM6D,EAhCK,SAAChI,GACnB,OACE,qBAAKiB,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAMA,UAAU,aAAawD,QAASzE,EAAMiI,kBAA5C,eAGA,qBAAKhH,UAAU,0BAAf,SACE,qFAEF,oBAAIA,UAAU,aAEd,oBAAGL,MAAO,CAAEyD,UAAW,UAAvB,+BACkBrE,EAAMkI,oBAExB,oBAAIjH,UAAU,aACd,oBAAGL,MAAO,CAAEyD,UAAW,UAAvB,0BACgB,IACd,uBAAMzD,MAAO,CAAEC,WAAY,QAA3B,UACGb,EAAMmI,kBADT,sBAIF,oBAAGvH,MAAO,CAAEyD,UAAW,UAAvB,6BACmB,IACjB,sBAAMzD,MAAO,CAAEC,WAAY,QAA3B,SAAsCb,EAAMoI,kBAAwB,IAFtE,kBC6TOC,MA5Uf,SAAmBrI,GACjB,MAAsCC,mBAAS,IAA/C,mBAAOqI,EAAP,KAAoBC,EAApB,KACA,EAAoBtI,mBAAS,IAA7B,mBAAOuI,EAAP,KAAWC,EAAX,KACA,EAAwCxI,mBAAS,IAAjD,mBAAOiF,EAAP,KAAqBC,EAArB,KACA,EAA4ClF,oBAAS,GAArD,mBAAOyI,EAAP,KAAuBC,EAAvB,KACA,EAAkD1I,oBAAS,GAA3D,mBAAO2I,EAAP,KAA0BC,EAA1B,KACA,EAAsC5I,oBAAS,GAA/C,mBAAOuF,EAAP,KAAoBC,EAApB,KACA,EAAkCxF,mBAAS,MAA3C,mBAAOqH,EAAP,KAAkBwB,EAAlB,KACA,EAAgC7I,mBAAS,MAAzC,mBAAOsH,EAAP,KAAiBwB,EAAjB,KACA,EAA0C9I,mBAAS,IAAnD,mBAAOuH,EAAP,KAAsBwB,EAAtB,KACA,EAAwC/I,mBAAS,MAAjD,mBAAOoH,EAAP,KAAqB4B,EAArB,KACA,EAAsChJ,mBAAS,IAA/C,mBAAO2H,EAAP,KAAoBsB,GAApB,KACA,GAA8CjJ,mBAAS,MAAvD,qBAAO0H,GAAP,MAAwBwB,GAAxB,MACA,GAAsDlJ,mBAAS,IAA/D,qBAAO4H,GAAP,MAA4BuB,GAA5B,MACA,GAAkCnJ,mBAAS,IAA3C,qBAAO6H,GAAP,MAAkBuB,GAAlB,MACA,GAAsCpJ,mBAAS,MAA/C,qBAAOmE,GAAP,MAAoBkF,GAApB,MACA,GAAkCrJ,mBAAS,IAA3C,qBAAOqE,GAAP,MAAkBiF,GAAlB,MACA,GAA0CtJ,mBAAS,MAAnD,qBAAO2E,GAAP,MAAsB4E,GAAtB,MACA,GAAsCvJ,mBAAS,IAA/C,qBAAO4E,GAAP,MAAoB4E,GAApB,MACA,GAA0CxJ,oBAAS,GAAnD,qBAAOyF,GAAP,MAAsBC,GAAtB,MACA,GAAwC1F,oBAAS,GAAjD,qBAAOyJ,GAAP,MAAqBC,GAArB,MACA,GAAkD1J,mBAAS,IAA3D,qBAAOkI,GAAP,MAA0ByB,GAA1B,MACA,GAA8C3J,mBAAS,IAAvD,qBAAOmI,GAAP,MAAwByB,GAAxB,MACA,GAAgD5J,mBAAS,IAAzD,qBAAOiI,GAAP,MAAyB4B,GAAzB,MACA,GAAgC7J,oBAAS,GAAzC,qBAAO8J,GAAP,MAAiBC,GAAjB,MAEM/B,GAAoB,WACxB0B,IAAiBD,IACbhB,IACFmB,GAAmB,IACnBC,GAAoB,IACpBF,GAAqB,IACrBI,GAAY,QAIVvC,GAAsB,WAC1BkB,GAAmBD,GACfA,IACFI,EAAa,MACbC,EAAY,MACZC,EAAiB,IACjBC,EAAgB,QAIdlB,GAAyB,WAC7Bc,GAAsBD,GAClBA,IACFQ,GAAuB,IACvBC,GAAa,IACbF,GAAmB,MACnBD,GAAe,MAIbxE,GAAmB,WACvBe,GAAgBD,GACZA,IACF8D,GAAe,MACfC,GAAa,MAIXvE,GAAqB,WACzBW,IAAkBD,IACdA,KACF8D,GAAiB,MACjBC,GAAe,MAIbQ,GAA4B,iDAAG,mGAC/B3B,EAAY7H,OAAS,GADU,0CAGTT,EAAM3C,SAAS0I,QAClCmE,YAAY5B,GACZrC,KAAK,CAAEvD,KAAM1C,EAAM7C,SAAS,KALA,OAGzB+I,EAHyB,OAM/BrH,QAAQsH,IACN,0CACAD,EAAQhH,OAAOiL,mBAAmBxI,aAAaiB,YAC/CsD,EAAQhH,OAAOiL,mBAAmBxI,aAAakB,cAEjD2G,IAAiB,GACjBC,GAAe,wBACfzE,KAb+B,kDAe/BnG,QAAQsH,IAAR,MACAmD,IAAe,GACfC,GACE,4FAEF7E,KApB+B,gCAuBjC4E,IAAe,GACfC,GAAa,wCACb7E,KAzBiC,QA2BnC6D,EAAe,IA3BoB,0DAAH,qDA8B5B6B,GAAe,iDAAG,mGAClBC,OAAO7B,GAAMxI,EAAMiC,yBAAyBxB,QAAU4J,OAAO7B,IAAO,GADlD,0CAGIxI,EAAM3C,SAAS0I,QAClCuE,QAAQ9B,GACRvC,KAAK,CAAEvD,KAAM1C,EAAM7C,SAAS,KALb,OAGZ+I,EAHY,OAMlBrH,QAAQsH,IACN,4BACAD,EAAQhH,OAAOqL,MAAM5I,aAAa0B,cAClC6C,EAAQhH,OAAOqL,MAAM5I,aAAaiB,aAEpC4G,IAAiB,GACjBC,GAAe,yCAAD,OAC0BvD,EAAQhH,OAAOqL,MAAM5I,aAAaiB,cAE1EoC,KAfkB,kDAiBlBnG,QAAQsH,IAAR,MACAmD,IAAe,GACfC,GACE,iHAEF7E,KAtBkB,gCAyBpB4E,IAAe,GACfC,GAAa,8CAAD,OACoCvJ,EAAMiC,yBAAyBxB,SAE/EiE,KA7BoB,QA+BtB+D,EAAM,IA/BgB,0DAAH,qDAkCf+B,GAAmB,iDAAG,kGACtBxK,EAAM9C,KAAK2I,MAAMC,UAAUZ,GADL,iCAEFlF,EAAM3C,SAAS0I,QAClC0E,SAASvF,GACTwF,KAAK,CAAEhI,KAAM1C,EAAM7C,SAAS,KAJP,OAElB+I,EAFkB,OAKxB+C,GAAgB,GAChBH,EAAa5C,EAAQyE,cACrB5B,EAAY7C,EAAQqB,UACpByB,EAAiB9C,EAAQ0E,iBACzBnD,KATwB,wBAWxBwB,GAAgB,GAChBxB,KAZwB,QAc1BtC,EAAgB,IAdU,4CAAH,qDAiBnB0F,GAAyB,iDAAG,mGAE9BR,OAAOzC,GAAe5H,EAAMiC,yBAAyBxB,QACrD4J,OAAOzC,IAAgB,GAHO,iCAKR5H,EAAM3C,SAAS0I,QAClC+E,eAAelD,GACf8C,KAAK,CAAEhI,KAAM1C,EAAM7C,SAAS,KAPD,OAKxB+I,EALwB,OAQ9BrH,QAAQsH,IAAI,uBAAwBD,EAAQ4B,WAC5CqB,IAAmB,GACnBE,GAAanD,EAAQ4B,WACrBsB,GAAuBlD,EAAQoC,aAC/BP,KAZ8B,wBAc9BoB,IAAmB,GACnBpB,KAf8B,4CAAH,qDAmBzBgD,GAAoB,iDAAG,mGAC3BlM,QAAQsH,IAAI,oBAAqBnG,EAAME,gBACV,MAAzBF,EAAME,eAFiB,iCAGKF,EAAM3C,SAAS0I,QAC1CiF,oBACAN,KAAK,CAAEhI,KAAM1C,EAAM7C,SAAS,KALN,cAGnB8N,EAHmB,OAOzBpM,QAAQsH,IAAI,sBAAuB8E,GAPV,SASJjL,EAAM3C,SAAS0I,QACjC+E,eAAeG,GACfP,KAAK,CAAEhI,KAAM1C,EAAM7C,SAAS,KAXN,OASnB+N,EATmB,OAazBrM,QAAQsH,IAAI,aAAc+E,GAC1BlB,IAAY,GACZJ,GAAqBsB,EAAO5C,aAC5BuB,GAAmBqB,EAAOpD,WAC1BgC,GAAoBmB,GACpBhD,KAlByB,wBAoBzBqB,IAAe,GACfC,GAAa,0BACb7E,KAtByB,4CAAH,qDA0B1B,OACE,gCACE,8DACA,yGAEA,sBAAK9D,MAAO,CAAEkG,UAAW,IAAzB,UACE,mBAAGlG,MAAO,CAAEC,WAAY,QAAxB,qCACA,uBACED,MAAO,CAAEmG,MAAO,OAChBC,YAAa,mCACbrH,MAAO2I,EACPrB,SAAU,SAAC5H,GAAD,OAAOkJ,EAAelJ,EAAE6H,OAAOvH,UAE3C,wBACEiB,MAAO,CAAEuG,WAAY,GAAIJ,MAAO,OAChCtC,QAAS,WACPwF,MAHJ,uCAUF,sBAAKrJ,MAAO,CAAEkG,UAAW,IAAzB,UACE,mBAAGlG,MAAO,CAAEC,WAAY,QAAxB,qCACA,uBACED,MAAO,CAAEmG,MAAO,OAChBC,YAAa,0BACbrH,MAAO6I,EACPvB,SAAU,SAAC5H,GAAD,OAAOoJ,EAAMpJ,EAAE6H,OAAOvH,UAElC,wBACEiB,MAAO,CAAEuG,WAAY,GAAIJ,MAAO,OAChCtC,QAAS,WACP2F,MAHJ,mBAQC5E,GACC,cAAC,EAAD,CACElB,UAAWA,GACXI,iBAAkBA,GAClBN,YAAaA,KAGhBsB,IACC,cAAC,EAAD,CACEb,YAAaA,GACbG,mBAAoBA,GACpBJ,cAAeA,QAKrB,sBAAKhE,MAAO,CAAEkG,UAAW,IAAzB,UACE,mBAAGlG,MAAO,CAAEC,WAAY,QAAxB,6CACA,uBACED,MAAO,CAAEmG,MAAO,OAChBC,YAAa,uBACbrH,MAAOuF,EACP+B,SAAU,SAAC5H,GAAD,OAAO8F,EAAgB9F,EAAE6H,OAAOvH,UAE5C,wBACEiB,MAAO,CAAEuG,WAAY,GAAIJ,MAAO,OAChCtC,QAAS,WACP+F,MAHJ,sBAQC9B,GACC,cAAC,EAAD,CACErB,aAAcA,EACdC,UAAWA,EACXC,SAAUA,EACVC,cAAeA,EACfC,oBAAqBA,QAK3B,sBAAK7G,MAAO,CAAEkG,UAAW,IAAzB,UACE,mBAAGlG,MAAO,CAAEC,WAAY,QAAxB,gDACA,uBACED,MAAO,CAAEmG,MAAO,OAChBC,YAAa,yBACbrH,MAAOiI,EACPX,SAAU,SAAC5H,GAAD,OAAO6J,GAAe7J,EAAE6H,OAAOvH,UAE3C,wBACEiB,MAAO,CAAEuG,WAAY,GAAIJ,MAAO,OAChCtC,QAAS,WACPoG,MAHJ,yBAQCjC,GACC,cAAC,EAAD,CACE3G,yBAA0BjC,EAAMiC,yBAChC0F,gBAAiBA,GACjBC,YAAaA,EACbC,oBAAqBA,GACrBC,UAAWA,GACXC,uBAAwBA,QAK9B,sBAAKnH,MAAO,CAAEkG,UAAW,GAAIqE,aAAc,UAA3C,UACE,mBAAGvK,MAAO,CAAEC,WAAY,QAAxB,mCACA,wBACED,MAAO,CAAEmG,MAAO,OAChBtC,QAAS,WACPsG,MAHJ,wBAQCrB,IACC,cAAC,EAAD,CACEK,SAAUA,GACV7B,iBAAkBA,GAClBC,kBAAmBA,GACnBC,gBAAiBA,GACjBH,kBAAmBA,YC7KhBmD,MApJf,WACE,MAGIxL,IAFFrC,EADF,EACEA,MADF,IAEEA,MAASF,EAFX,EAEWA,SAAUF,EAFrB,EAEqBA,SAAUsB,EAF/B,EAE+BA,QAASvB,EAFxC,EAEwCA,KAGxC,EAAsC+C,mBAAS,MAA/C,mBAAOS,EAAP,KAAoB2K,EAApB,KACA,EAA8CpL,mBAAS,MAAvD,mBAAOa,EAAP,KAAwBwK,EAAxB,KACA,EAAwCrL,mBAAS,MAAjD,mBAAOc,EAAP,KAAqBwK,EAArB,KACA,EAA4CtL,mBAAS,MAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAoEF,mBAClE,IADF,mBAAOyB,EAAP,KAAmC8J,EAAnC,KAGA,EAAkCvL,mBAAS,IAA3C,mBAAOO,EAAP,KAAkBiL,EAAlB,KACA,EAAgExL,mBAAS,IAAzE,mBAAOgC,EAAP,KAAiCyJ,EAAjC,KACA,EAAsCzL,mBAAS,IAA/C,mBAAOmD,EAAP,KAAoBuI,EAApB,KA2FA,OAzFA5M,qBAAU,WAAM,sDACd,+GAOM6M,EAAW,CACbC,UAAW,EACXC,QAAS,UAGPC,EAAW,CACbF,UAAW,YAGTxO,GAAYF,GAAYsB,GAhB9B,iCAiBkBpB,EAAS0I,QAAQiG,QAAQtB,OAjB3C,cAiBIsB,EAjBJ,gBAmB2B3O,EAAS4O,cAC9B,uBACAL,GArBN,cAmBIM,EAnBJ,OAwBI7O,EAAS6B,OAAOqH,qBAAqBwF,GAAUvM,GAAG,QAAQ,SAAC2M,GACzDD,EAAelJ,KAAKmJ,GACpBX,EAA8BU,GAC9B/L,EACE+L,EAAeA,EAAezL,OAAS,GAAGkB,aAAaE,YAEzDhD,QAAQsH,IAAI,mCA9BlB,UAiCkC9I,EAAS4O,cACrC,kBACAL,GAnCN,eAiCIQ,EAjCJ,OAsCQC,EAAcD,EAAsB7I,KACtC,SAACZ,GAAD,OAAYA,EAAOhB,aAAa0B,iBAGlChG,EAAS6B,OAAOkH,gBAAgB2F,GAAUvM,GAAG,QAAQ,SAAC2M,GACpDE,EAAYrJ,KAAKmJ,EAAMxK,aAAa0B,eACpCoI,EAAaY,GACbxN,QAAQsH,IAAI,oCA7ClB,UAgD2B9I,EAAS4O,cAC9B,qBACAL,GAlDN,eAgDIU,EAhDJ,OAqDIjP,EAAS6B,OAAOiL,mBAAmB4B,GAAUvM,GAAG,QAAQ,SAAC2M,GACvDG,EAAetJ,KAAKmJ,GACpBtN,QAAQsH,IAAI,sCAAuCmG,GACnDZ,EAA4BY,GAC5BzN,QAAQsH,IAAI,mCAzDlB,UA4DkB9I,EAAS4O,cAAc,QAASL,GA5DlD,QA4DIW,EA5DJ,OA8DIlP,EAAS6B,OAAOqL,MAAMwB,GAAUvM,GAAG,QAAQ,SAAC2M,GAC1CI,EAAMvJ,KAAKmJ,GACXtN,QAAQsH,IAAI,yBAA0BoG,GACtCZ,EAAeY,GACf1N,QAAQsH,IAAI,+BAGdsF,EAAaY,GACbhB,EAAelO,EAASwD,YACxB2K,EAAmB7M,GACnB8M,EAAgBS,GAChBR,EAA8BU,GAC1BA,EAAezL,OAAS,EAC1BN,EACE+L,EAAeA,EAAezL,OAAS,GAAGkB,aAAaE,YAGzD1B,EAAkB,KAEpBuL,EAA4BY,GAC5BX,EAAeY,GAlFnB,6CADc,uBAAC,WAAD,wBAsFdC,KACC,CAACnP,EAAUF,EAAUsB,IAGtB,gCACE,cAAC,EAAD,IACElB,EAAMN,SAEHM,EAAMF,SAGT,cAAC,EAAD,CACEqD,YAAaA,EACbR,eAAgBA,EAChBY,gBAAiBA,EACjBN,UAAWA,EACXO,aAAcA,IAPhB,cAAC,EAAD,IAFA,cAAC,EAAD,IAYF,uBACCL,IAAgBK,EACf,cAAC,EAAD,CAAY1D,SAAUA,EAAUF,SAAUA,EAAUD,KAAMA,IAE1D,wBAGF,cAAC,EAAD,CACEG,SAAUA,EACVF,SAAUA,EACVD,KAAMA,EACN+E,yBAA0BA,EAC1B/B,eAAgBA,IAElB,uBACA,cAAC,EAAD,CACEM,UAAWA,EACXkB,2BAA4BA,EAC5BO,yBAA0BA,EAC1BmB,YAAaA,EACblG,KAAMA,QCxJd,SAASuP,EAAT,GAA8B,IAAdC,EAAa,EAAbA,IAAKC,EAAQ,EAARA,KACnB,OACE,mBAAGC,KAAMF,EAAKxF,OAAO,SAAS2F,IAAI,aAAlC,SACGF,IAsBQG,MAjBf,WACE,OACE,mCACE,gDACA,cAACL,EAAD,CAAMC,IAAK,oBAAqBC,KAAM,UACtC,cAACF,EAAD,CACEC,IAAK,gEACLC,KAAM,mBAER,cAACF,EAAD,CAAMC,IAAK,2BAA4BC,KAAM,YAC7C,cAACF,EAAD,CAAMC,IAAK,sBAAuBC,KAAM,UACxC,cAACF,EAAD,CAAMC,IAAK,2BAA4BC,KAAM,aAC7C,cAACF,EAAD,CAAMC,IAAK,uBAAwBC,KAAM,iB,OCDhCI,MAdf,WACE,OACE,cAAC,EAAD,UACE,qBAAKC,GAAG,MAAR,SACE,sBAAK/L,UAAU,YAAf,UACE,cAACgM,EAAD,IACA,uBACA,cAAC,EAAD,YCPGC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,S","file":"static/js/main.2187c68d.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(async (artifact) => {\n    if (artifact) {\n      const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n      const accounts = await web3.eth.requestAccounts();\n      const networkID = await web3.eth.net.getId();\n      const { abi } = artifact;\n      let address, contract;\n      try {\n        address = artifact.networks[networkID].address;\n        contract = new web3.eth.Contract(abi, address);\n      } catch (err) {\n        console.error(err);\n      }\n      dispatch({\n        type: actions.init,\n        data: { artifact, web3, accounts, networkID, contract, address },\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach((e) => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach((e) => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider\n      value={{\n        state,\n        dispatch,\n      }}\n    >\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","function Welcome() {\n  return (\n    <div\n    // style={style}\n    >\n      <h1>👋 Welcome to the Voting Dapp!</h1>\n      <p>Here are some useful informations:</p>\n    </div>\n  );\n}\n\n// const style = {\n//   container: {\n//     flex: 1,\n//     marginTop: 10,\n//   },\n// };\n\nexport default Welcome;\n","import { useState, useEffect } from \"react\";\n\nfunction Connected(props) {\n  const [workflowStatus, setWorkflowStatus] = useState(\"\");\n  const [isWl, setIsWl] = useState(false);\n\n  useEffect(() => {\n    let isWL = false;\n    for (let i = 0; i < props.whitelist.length; i++) {\n      if (props.whitelist[i] === props.userAddress.toString()) {\n        isWL = true;\n      }\n      setIsWl(isWL);\n    }\n\n    switch (props.workflowStatus) {\n      case \"0\":\n        setWorkflowStatus(\"Registering voters\");\n        break;\n      case \"1\":\n        setWorkflowStatus(\"Proposals registration started\");\n        break;\n      case \"2\":\n        setWorkflowStatus(\"Proposals registration ended\");\n        break;\n      case \"3\":\n        setWorkflowStatus(\"Voting session started\");\n        break;\n      case \"4\":\n        setWorkflowStatus(\"Voting session ended\");\n        break;\n      default:\n        setWorkflowStatus(\"not sync to voting contract\");\n    }\n  }, [props.workflowStatus, props.whitelist, props.userAddress]);\n\n  return (\n    <div>\n      <ul>\n        <li>\n          Your address is:{\" \"}\n          <span style={{ fontWeight: \"bold\" }}>{props.userAddress}</span>\n        </li>\n        <li>\n          Are you Wl? <span style={{ fontWeight: \"bold\" }}>{`${isWl}`}</span>\n        </li>\n        <li>\n          Voting contract address:{\" \"}\n          <span style={{ fontWeight: \"bold\" }}>{props.contractAddress}</span>\n        </li>\n        <li>\n          Admin address:{\" \"}\n          <span style={{ fontWeight: \"bold\" }}>{props.adminAddress}</span>\n        </li>\n        <li>\n          State of the voting process:{\" \"}\n          <span style={{ fontWeight: \"bold\" }}>{workflowStatus}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Connected;\n","function NoticeNoArtifact() {\n  return (\n    <p>\n      ⚠️ Cannot find <span className=\"code\">Voting</span> contract artifact.\n      Please complete the above preparation first, then restart the react dev\n      server.\n    </p>\n  );\n}\n\nexport default NoticeNoArtifact;\n","function NoticeWrongNetwork() {\n  return (\n    <p>\n      ⚠️ MetaMask is not connected to the same network as the one Voting is\n      deployed to.\n    </p>\n  );\n}\n\nexport default NoticeWrongNetwork;\n","import { useEffect, useState } from \"react\";\n\nfunction Events(props) {\n  const [workflowList, setWorkflowList] = useState([]);\n  const [proposalList, setProposalList] = useState([]);\n  const [votesList, setVotesList] = useState([]);\n\n  useEffect(() => {\n    let workflowStatusChangeEvents = props.workflowStatusChangeEvents;\n\n    if (workflowStatusChangeEvents && workflowStatusChangeEvents.length === 1) {\n      workflowStatusChangeEvents[0].returnValues._previousStatus =\n        \"Registering voters\";\n      workflowStatusChangeEvents[0].returnValues._newStatus =\n        \"Proposals registration started\";\n    } else if (\n      workflowStatusChangeEvents &&\n      workflowStatusChangeEvents.length === 2\n    ) {\n      workflowStatusChangeEvents[0].returnValues._previousStatus =\n        \"Registering voters\";\n      workflowStatusChangeEvents[0].returnValues._newStatus =\n        \"Proposals registration started\";\n      workflowStatusChangeEvents[1].returnValues._previousStatus =\n        \"Proposals registration started\";\n      workflowStatusChangeEvents[1].returnValues._newStatus =\n        \"Proposals registration ended\";\n    } else if (\n      workflowStatusChangeEvents &&\n      workflowStatusChangeEvents.length === 3\n    ) {\n      workflowStatusChangeEvents[0].returnValues._previousStatus =\n        \"Registering voters\";\n      workflowStatusChangeEvents[0].returnValues._newStatus =\n        \"Proposals registration started\";\n      workflowStatusChangeEvents[1].returnValues._previousStatus =\n        \"Proposals registration started\";\n      workflowStatusChangeEvents[1].returnValues._newStatus =\n        \"Proposals registration ended\";\n      workflowStatusChangeEvents[2].returnValues._previousStatus =\n        \"Proposals registration ended\";\n      workflowStatusChangeEvents[2].returnValues._newStatus =\n        \"Voting session started\";\n    } else if (\n      workflowStatusChangeEvents &&\n      workflowStatusChangeEvents.length === 4\n    ) {\n      workflowStatusChangeEvents[0].returnValues._previousStatus =\n        \"Registering voters\";\n      workflowStatusChangeEvents[0].returnValues._newStatus =\n        \"Proposals registration started\";\n      workflowStatusChangeEvents[1].returnValues._previousStatus =\n        \"Proposals registration started\";\n      workflowStatusChangeEvents[1].returnValues._newStatus =\n        \"Proposals registration ended\";\n      workflowStatusChangeEvents[2].returnValues._previousStatus =\n        \"Proposals registration ended\";\n      workflowStatusChangeEvents[2].returnValues._newStatus =\n        \"Voting session started\";\n      workflowStatusChangeEvents[3].returnValues._previousStatus =\n        \"Voting session started\";\n      workflowStatusChangeEvents[3].returnValues._newStatus =\n        \"Voting session ended\";\n    }\n\n    let allAboutProposals = [];\n    const gatheredDetailsProposals = async () => {\n      for (\n        let index = 0;\n        index < props.proposalRegisteredEvents.length;\n        index++\n      ) {\n        let blockNumber = props.proposalRegisteredEvents[index].blockNumber;\n        let timestamp = (await props.web3.eth.getBlock(blockNumber)).timestamp;\n        let date = new Date(timestamp * 1000).toUTCString();\n        let from = (\n          await props.web3.eth.getTransaction(\n            props.proposalRegisteredEvents[index].transactionHash\n          )\n        ).from;\n        let object = {\n          _proposalId:\n            props.proposalRegisteredEvents[index].returnValues._proposalId,\n          _description:\n            props.proposalRegisteredEvents[index].returnValues._description,\n          dateUTC: date,\n          sender: from,\n        };\n        allAboutProposals.push(object);\n      }\n      setProposalList(allAboutProposals);\n    };\n\n    let allAboutVotes = [];\n    const gatheredDetailsVotes = async () => {\n      for (let index2 = 0; index2 < props.votedEvents.length; index2++) {\n        let blockNumber = props.votedEvents[index2].blockNumber;\n        let timestamp = (await props.web3.eth.getBlock(blockNumber)).timestamp;\n        let date = new Date(timestamp * 1000).toUTCString();\n        let object = {\n          _proposalId: props.votedEvents[index2].returnValues._proposalId,\n          _voterAddress: props.votedEvents[index2].returnValues._voterAddress,\n          dateUTC: date,\n        };\n        allAboutVotes.push(object);\n      }\n      setVotesList(allAboutVotes);\n    };\n\n    if (props.proposalRegisteredEvents.length > 0) {\n      gatheredDetailsProposals();\n    }\n\n    if (props.votedEvents.length > 0) {\n      gatheredDetailsVotes();\n    }\n\n    setWorkflowList(workflowStatusChangeEvents);\n  }, [\n    props.workflowStatusChangeEvents,\n    props.proposalRegisteredEvents,\n    props.whitelist,\n    props.votedEvents,\n    props.web3,\n  ]);\n\n  let workflowStatusEventsDisplay = (\n    <p>\n      No change done by the admin ➡️ Still in{\" \"}\n      <span style={{ fontWeight: \"bold\" }}>voter registration </span> process!\n    </p>\n  );\n\n  if (workflowList && workflowList.length > 0) {\n    workflowStatusEventsDisplay = (\n      <ol>\n        {workflowList.map((workflowEvent, i) => (\n          <li style={{ fontWeight: \"bold\" }} key={i}>\n            {workflowEvent.returnValues._previousStatus} ➡️{\" \"}\n            {workflowEvent.returnValues._newStatus}\n          </li>\n        ))}\n      </ol>\n    );\n  }\n\n  let proposalsDisplay = <p>No proposal has been submitted yet!</p>;\n\n  if (proposalList.length > 0) {\n    proposalsDisplay = (\n      <ul>\n        {proposalList.map((proposal, k) => (\n          <li style={{ fontWeight: \"bold\" }} key={k}>\n            {proposal._proposalId} ➡️ {proposal._description}\n            <details style={{ padding: 0 }}>\n              <summary\n                style={{ fontWeight: \"normal\", fontSize: 14, padding: 5 }}\n              >\n                Details:\n              </summary>\n              <p style={{ fontWeight: \"normal\" }}>From: {proposal.sender}</p>\n              <p style={{ fontWeight: \"normal\" }}>Date: {proposal.dateUTC}</p>\n            </details>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  let votesDisplay = <p>No vote has been submitted yet!</p>;\n\n  if (votesList.length > 0) {\n    votesDisplay = (\n      <ul>\n        {votesList.map((vote, l) => (\n          <li style={{ fontWeight: \"bold\" }} key={l}>\n            {vote._voterAddress} ➡️ {vote._proposalId}\n            <details style={{ padding: 0 }}>\n              <summary\n                style={{ fontWeight: \"normal\", fontSize: 14, padding: 5 }}\n              >\n                Details:\n              </summary>\n              <p style={{ fontWeight: \"normal\" }}>Date: {vote.dateUTC}</p>\n            </details>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  return (\n    <>\n      <h2>✍️ Events listing</h2>\n      <p>We have no secret for you!</p>\n\n      <details>\n        <summary>Voting process progress</summary>\n        <p>Follow the progress of the voting process:</p>\n        {workflowStatusEventsDisplay}\n      </details>\n\n      <details>\n        <summary>Whitelist</summary>\n        <p>Here are all the whitelisted addresses:</p>\n        <ul>\n          {props.whitelist.map((address, j) => (\n            <li key={j}>{address}</li>\n          ))}\n        </ul>\n      </details>\n\n      <details>\n        <summary>Proposals</summary>\n        <p>\n          Find the <span style={{ fontWeight: \"bold\" }}>ID</span> of the\n          proposal you want to vote for:\n        </p>\n        {proposalsDisplay}\n      </details>\n\n      <details>\n        <summary>Votes</summary>\n        <p>\n          Summary of the <span style={{ fontWeight: \"bold\" }}>votes</span>:\n        </p>\n        {votesDisplay}\n      </details>\n    </>\n  );\n}\n\nexport default Events;\n","const PopupError = (props) => {\n  let popupDisplay;\n  if (props.isErrorUser) {\n    popupDisplay = (\n      <div style={{ textAlign: \"center\", fontSize: \"2.2rem\" }}>\n        <p>{props.errorUser} </p>\n        {/* <p>Must be between 0 and {props.proposalRegisteredEvents.length}</p> */}\n      </div>\n    );\n  } else if (props.isErrorAdmin) {\n    popupDisplay = (\n      <div style={{ textAlign: \"center\" }}>\n        <p> {props.errorAdmin} </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={props.togglePopupError}>\n          x\n        </span>\n        <div className=\"popup-title-transaction\">\n          <strong>🧨 Error 🧨</strong>\n        </div>\n        {popupDisplay}\n      </div>\n    </div>\n  );\n};\n\nexport default PopupError;\n","const PopupSuccess = (props) => {\n  let popupDisplay;\n  if (props.isSuccessUser) {\n    popupDisplay = (\n      <div style={{ textAlign: \"center\", fontSize: \"2.2rem\" }}>\n        <p>{props.successUser}</p>\n      </div>\n    );\n  } else if (props.isSuccessAdmin) {\n    popupDisplay = (\n      <div style={{ textAlign: \"center\", fontSize: \"2.2rem\" }}>\n        <p> {props.successAdmin}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={props.togglePopupSuccess}>\n          x\n        </span>\n        <div className=\"popup-title-transaction\">\n          <strong>🎉 Transaction success 🎉</strong>\n        </div>\n        <hr className=\"popup-hr\" />\n        {popupDisplay}\n      </div>\n    </div>\n  );\n};\n\nexport default PopupSuccess;\n","import { useState } from \"react\";\nimport PopupError from \"./Popup/PopupError\";\nimport PopupSuccess from \"./Popup/PopupSuccess\";\n\nfunction AdminPanel(props) {\n  const [voterAddress, setVoterAddress] = useState(\"\");\n  const [isErrorAdmin, setIsErrorAdmin] = useState(null);\n  const [errorAdmin, setErrorAdmin] = useState(\"\");\n  const [isSuccessAdmin, setIsSuccessAdmin] = useState(null);\n  const [successAdmin, setSuccessAdmin] = useState(\"\");\n  const [isOpenError, setIsOpenError] = useState(false);\n  const [isOpenSuccess, setIsOpenSuccess] = useState(false);\n\n  const togglePopupError = () => {\n    setIsOpenError(!isOpenError);\n    if (isOpenError) {\n      setIsErrorAdmin(null);\n      setErrorAdmin(\"\");\n    }\n  };\n\n  const togglePopupSuccess = () => {\n    setIsOpenSuccess(!isOpenSuccess);\n    if (isOpenSuccess) {\n      setIsSuccessAdmin(null);\n      setSuccessAdmin(\"\");\n    }\n  };\n\n  const handleClickAddVoterButton = async () => {\n    if (props.web3.utils.isAddress(voterAddress)) {\n      try {\n        const transac = await props.contract.methods\n          .addVoter(voterAddress)\n          .send({ from: props.accounts[0] });\n\n        console.log(\n          \"A new voter has been registered: \",\n          transac.events.VoterRegistered.returnValues._voterAddress\n        );\n        setIsSuccessAdmin(true);\n        setSuccessAdmin(\n          \"A new voter has been registered: \" +\n            `${transac.events.VoterRegistered.returnValues._voterAddress}`\n        );\n        togglePopupSuccess();\n      } catch (e) {\n        console.log(e);\n        setIsErrorAdmin(true);\n        setErrorAdmin(\n          \"Transaction rejected: Voter might have already been added or wrong workflow status!\"\n        );\n        togglePopupError();\n      }\n    } else {\n      setIsErrorAdmin(true);\n      setErrorAdmin(\"This is not a valid ethereum address\");\n      togglePopupError();\n    }\n\n    setVoterAddress(\"\");\n  };\n\n  const handleClickStartProposalsRegistration = async () => {\n    try {\n      const transac = await props.contract.methods\n        .startProposalsRegistering()\n        .send({ from: props.accounts[0] });\n      console.log(\n        \"Workflow status change to: \",\n        transac.events.WorkflowStatusChange.returnValues._newStatus\n      );\n      setIsSuccessAdmin(true);\n      setSuccessAdmin(\n        \"Workflow status change to: \" +\n          `${transac.events.WorkflowStatusChange.returnValues._newStatus}`\n      );\n      togglePopupSuccess();\n    } catch (e) {\n      console.log(e);\n      setIsErrorAdmin(true);\n      setErrorAdmin(\n        \"Transaction rejected: you might not change for this workflow status!\"\n      );\n      togglePopupError();\n    }\n  };\n\n  const handleClickEndProposalsRegistration = async () => {\n    try {\n      const transac = await props.contract.methods\n        .endProposalsRegistering()\n        .send({ from: props.accounts[0] });\n      console.log(\n        \"Workflow status change to: \",\n        transac.events.WorkflowStatusChange.returnValues._newStatus\n      );\n      setIsSuccessAdmin(true);\n      setSuccessAdmin(\n        \"Workflow status change to: \" +\n          `${transac.events.WorkflowStatusChange.returnValues._newStatus}`\n      );\n      togglePopupSuccess();\n    } catch (e) {\n      console.log(e);\n      setIsErrorAdmin(true);\n      setErrorAdmin(\n        \"Transaction rejected: you might not change for this workflow status!\"\n      );\n      togglePopupError();\n    }\n  };\n\n  const handleClickStartVotingSession = async () => {\n    try {\n      const transac = await props.contract.methods\n        .startVotingSession()\n        .send({ from: props.accounts[0] });\n      console.log(\n        \"Workflow status change to: \",\n        transac.events.WorkflowStatusChange.returnValues._newStatus\n      );\n      setIsSuccessAdmin(true);\n      setSuccessAdmin(\n        \"Workflow status change to: \" +\n          `${transac.events.WorkflowStatusChange.returnValues._newStatus}`\n      );\n      togglePopupSuccess();\n    } catch (e) {\n      console.log(e);\n      setIsErrorAdmin(true);\n      setErrorAdmin(\n        \"Transaction rejected: you might not change for this workflow status!\"\n      );\n      togglePopupError();\n    }\n  };\n\n  const handleClickEndVotingSession = async () => {\n    try {\n      const transac = await props.contract.methods\n        .endVotingSession()\n        .send({ from: props.accounts[0] });\n      console.log(\n        \"Workflow status change to: \",\n        transac.events.WorkflowStatusChange.returnValues._newStatus\n      );\n      setIsSuccessAdmin(true);\n      setSuccessAdmin(\n        \"Workflow status change to: \" +\n          `${transac.events.WorkflowStatusChange.returnValues._newStatus}`\n      );\n      togglePopupSuccess();\n    } catch (e) {\n      console.log(e);\n      setIsErrorAdmin(true);\n      setErrorAdmin(\n        \"Transaction rejected: you might not change for this workflow status!\"\n      );\n      togglePopupError();\n    }\n  };\n\n  return (\n    <div>\n      <h2>🕹 Admin dashboard</h2>\n      <div style={{ marginTop: 15 }}>\n        <p style={{ fontWeight: \"bold\" }}>Register Voter:</p>\n        <input\n          style={{ width: \"60%\" }}\n          placeholder={\"Set voter address...\"}\n          value={voterAddress}\n          onChange={(e) => setVoterAddress(e.target.value)}\n        />\n        <button\n          style={{ marginLeft: 10, width: \"30%\" }}\n          onClick={() => {\n            handleClickAddVoterButton();\n          }}\n        >\n          Add new voter to whitelist\n        </button>\n        {isOpenError && (\n          <PopupError\n            errorAdmin={errorAdmin}\n            togglePopupError={togglePopupError}\n            isErrorAdmin={isErrorAdmin}\n          />\n        )}\n        {isOpenSuccess && (\n          <PopupSuccess\n            successAdmin={successAdmin}\n            togglePopupSuccess={togglePopupSuccess}\n            isSuccessAdmin={isSuccessAdmin}\n          />\n        )}\n      </div>\n      <div style={{ marginTop: 15 }}>\n        <p style={{ fontWeight: \"bold\" }}>Start proposals registration:</p>\n        <button\n          style={{ width: \"30%\" }}\n          onClick={() => {\n            handleClickStartProposalsRegistration();\n          }}\n        >\n          Start proposals registration\n        </button>\n      </div>\n\n      <div style={{ marginTop: 15 }}>\n        <p style={{ fontWeight: \"bold\" }}>End proposals registration:</p>\n        <button\n          style={{ width: \"30%\" }}\n          onClick={() => {\n            handleClickEndProposalsRegistration();\n          }}\n        >\n          End proposals registration\n        </button>\n      </div>\n\n      <div style={{ marginTop: 15 }}>\n        <p style={{ fontWeight: \"bold\" }}>Start voting session:</p>\n        <button\n          style={{ width: \"30%\" }}\n          onClick={() => {\n            handleClickStartVotingSession();\n          }}\n        >\n          Start voting session\n        </button>\n      </div>\n      <div style={{ marginTop: 15 }}>\n        <p style={{ fontWeight: \"bold\" }}>End voting session:</p>\n        <button\n          style={{ width: \"30%\" }}\n          onClick={() => {\n            handleClickEndVotingSession();\n          }}\n        >\n          End voting session\n        </button>\n      </div>\n      <hr />\n    </div>\n  );\n}\n\nexport default AdminPanel;\n","const PopupVoter = (props) => {\n  let popupDisplay;\n  if (props.isEthAddress) {\n    popupDisplay = (\n      <>\n        <strong className=\"popup-title\">Voter informations 🔦</strong>\n        <hr className=\"popup-hr\" />\n        <p>\n          Is the voter Whitelisted?{\" \"}\n          <span style={{ fontWeight: \"bold\" }}>{`${props.isVoterWl}`}</span>\n        </p>\n        <p>\n          Did the voter vote?{\" \"}\n          <span style={{ fontWeight: \"bold\" }}>{`${props.hasVoted}`}</span>\n        </p>\n        <p>\n          Which proposal did the voter vote for?{\" \"}\n          <span style={{ fontWeight: \"bold\" }}>{props.whichProposal}</span>\n        </p>\n      </>\n    );\n  } else if (!props.isEthAddress) {\n    popupDisplay = (\n      <p style={{ textAlign: \"center\", fontSize: \"2.2rem\" }}>\n        🧨 This is not a valid ethereum address 🧨\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={props.togglePopupGetVoter}>\n          x\n        </span>\n        {popupDisplay}\n      </div>\n    </div>\n  );\n};\n\nexport default PopupVoter;\n","const PopupProposal = (props) => {\n  let popupDisplay;\n  if (props.isProposalValid) {\n    popupDisplay = (\n      <>\n        <strong className=\"popup-title\">\n          Informations about proposal n°{props.oneProposal} 🔦\n        </strong>\n        <hr className=\"popup-hr\" />\n        <p>\n          Description?{\" \"}\n          <span\n            style={{ fontWeight: \"bold\" }}\n          >{`${props.proposalDescription}`}</span>\n        </p>\n        <p>\n          Number of votes?{\" \"}\n          <span style={{ fontWeight: \"bold\" }}>{props.voteCount}</span>\n        </p>\n      </>\n    );\n  } else if (!props.isProposalValid) {\n    popupDisplay = (\n      <div style={{ textAlign: \"center\", fontSize: \"2.2rem\" }}>\n        <p>🧨 Proposal ID invalid 🧨</p>\n        <p>Must be between 0 and {props.proposalRegisteredEvents.length}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={props.togglePopupGetProposal}>\n          x\n        </span>\n        {popupDisplay}\n      </div>\n    </div>\n  );\n};\n\nexport default PopupProposal;\n","const PopupWinner = (props) => {\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={props.togglePopupWinner}>\n          x\n        </span>\n        <div className=\"popup-title-transaction\">\n          <strong>🎉 Transaction success 🎉</strong>\n        </div>\n        <hr className=\"popup-hr\" />\n\n        <p style={{ textAlign: \"center\" }}>\n          Proposal Id n° {props.winnerProposalId}\n        </p>\n        <hr className=\"popup-hr\" />\n        <p style={{ textAlign: \"center\" }}>\n          The Winner is{\" \"}\n          <span style={{ fontWeight: \"bold\" }}>\n            {props.winnerDescription} 😎\n          </span>\n        </p>\n        <p style={{ textAlign: \"center\" }}>\n          with a number of{\" \"}\n          <span style={{ fontWeight: \"bold\" }}>{props.winnerVoteCount}</span>{\" \"}\n          votes!\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PopupWinner;\n","import { useState } from \"react\";\nimport PopupVoter from \"./Popup/PopupVoter\";\nimport PopupProposal from \"./Popup/PopupProposal\";\nimport PopupError from \"./Popup/PopupError\";\nimport PopupSuccess from \"./Popup/PopupSuccess\";\nimport PopupWinner from \"./Popup/PopupWinner\";\n\nfunction UserPanel(props) {\n  const [description, setDescription] = useState(\"\");\n  const [ID, setID] = useState(\"\");\n  const [voterAddress, setVoterAddress] = useState(\"\");\n  const [isOpenGetVoter, setIsOpenGetVoter] = useState(false);\n  const [isOpenGetProposal, setIsOpenGetProposal] = useState(false);\n  const [isOpenError, setIsOpenError] = useState(false);\n  const [isVoterWl, setIsVoterWl] = useState(null);\n  const [hasVoted, setHasVoted] = useState(null);\n  const [whichProposal, setWhichProposal] = useState(\"\");\n  const [isEthAddress, setIsEthAddress] = useState(null);\n  const [oneProposal, setOneProposal] = useState(\"\");\n  const [isProposalValid, setIsProposalValid] = useState(null);\n  const [proposalDescription, setProposalDescription] = useState(\"\");\n  const [voteCount, setVoteCount] = useState(\"\");\n  const [isErrorUser, setIsErrorUser] = useState(null);\n  const [errorUser, setErrorUser] = useState(\"\");\n  const [isSuccessUser, setIsSuccessUser] = useState(null);\n  const [successUser, setSuccessUser] = useState(\"\");\n  const [isOpenSuccess, setIsOpenSuccess] = useState(false);\n  const [isOpenWinner, setIsOpenWinner] = useState(false);\n  const [winnerDescription, setWinnerDescription] = useState(\"\");\n  const [winnerVoteCount, setWinnerVoteCount] = useState(\"\");\n  const [winnerProposalId, setWinnerProposalId] = useState(\"\");\n  const [isWinner, setIsWinner] = useState(false);\n\n  const togglePopupWinner = () => {\n    setIsOpenWinner(!isOpenWinner);\n    if (isOpenGetVoter) {\n      setWinnerVoteCount(\"\");\n      setWinnerProposalId(\"\");\n      setWinnerDescription(\"\");\n      setIsWinner(null);\n    }\n  };\n\n  const togglePopupGetVoter = () => {\n    setIsOpenGetVoter(!isOpenGetVoter);\n    if (isOpenGetVoter) {\n      setIsVoterWl(null);\n      setHasVoted(null);\n      setWhichProposal(\"\");\n      setIsEthAddress(null);\n    }\n  };\n\n  const togglePopupGetProposal = () => {\n    setIsOpenGetProposal(!isOpenGetProposal);\n    if (isOpenGetProposal) {\n      setProposalDescription(\"\");\n      setVoteCount(\"\");\n      setIsProposalValid(null);\n      setOneProposal(\"\");\n    }\n  };\n\n  const togglePopupError = () => {\n    setIsOpenError(!isOpenError);\n    if (isOpenError) {\n      setIsErrorUser(null);\n      setErrorUser(\"\");\n    }\n  };\n\n  const togglePopupSuccess = () => {\n    setIsOpenSuccess(!isOpenSuccess);\n    if (isOpenSuccess) {\n      setIsSuccessUser(null);\n      setSuccessUser(\"\");\n    }\n  };\n\n  const handleClickRegisterProposals = async () => {\n    if (description.length > 0) {\n      try {\n        const transac = await props.contract.methods\n          .addProposal(description)\n          .send({ from: props.accounts[0] });\n        console.log(\n          \"A new proposition has been registered: \",\n          transac.events.ProposalRegistered.returnValues._proposalId,\n          transac.events.ProposalRegistered.returnValues._description\n        );\n        setIsSuccessUser(true);\n        setSuccessUser(\"Proposal registered!\");\n        togglePopupSuccess();\n      } catch (e) {\n        console.log(e);\n        setIsErrorUser(true);\n        setErrorUser(\n          \"Transaction rejected: If you are whitelisted, it might be an inadequate workflow status!\"\n        );\n        togglePopupError();\n      }\n    } else {\n      setIsErrorUser(true);\n      setErrorUser(\"description can't be an empty string\");\n      togglePopupError();\n    }\n    setDescription(\"\");\n  };\n\n  const handleClickVote = async () => {\n    if (Number(ID) < props.proposalRegisteredEvents.length && Number(ID) >= 0) {\n      try {\n        const transac = await props.contract.methods\n          .setVote(ID)\n          .send({ from: props.accounts[0] });\n        console.log(\n          \"A new vote has been set: \",\n          transac.events.Voted.returnValues._voterAddress,\n          transac.events.Voted.returnValues._proposalId\n        );\n        setIsSuccessUser(true);\n        setSuccessUser(\n          `Vote registered for proposal ID n° ${transac.events.Voted.returnValues._proposalId}`\n        );\n        togglePopupSuccess();\n      } catch (e) {\n        console.log(e);\n        setIsErrorUser(true);\n        setErrorUser(\n          \"Transaction rejected: If you are whitelisted, it might be an inadequate workflow status or you already Voted!\"\n        );\n        togglePopupError();\n      }\n    } else {\n      setIsErrorUser(true);\n      setErrorUser(\n        `Proposal ID invalid, Must be between 0 and ${props.proposalRegisteredEvents.length}`\n      );\n      togglePopupError();\n    }\n    setID(\"\");\n  };\n\n  const handleClickGetVoter = async () => {\n    if (props.web3.utils.isAddress(voterAddress)) {\n      const transac = await props.contract.methods\n        .getVoter(voterAddress)\n        .call({ from: props.accounts[0] });\n      setIsEthAddress(true);\n      setIsVoterWl(transac.isRegistered);\n      setHasVoted(transac.hasVoted);\n      setWhichProposal(transac.votedProposalId);\n      togglePopupGetVoter();\n    } else {\n      setIsEthAddress(false);\n      togglePopupGetVoter();\n    }\n    setVoterAddress(\"\");\n  };\n\n  const handleClickGetOneProposal = async () => {\n    if (\n      Number(oneProposal) < props.proposalRegisteredEvents.length &&\n      Number(oneProposal) >= 0\n    ) {\n      const transac = await props.contract.methods\n        .getOneProposal(oneProposal)\n        .call({ from: props.accounts[0] });\n      console.log(\"transac.voteCount =>\", transac.voteCount);\n      setIsProposalValid(true);\n      setVoteCount(transac.voteCount);\n      setProposalDescription(transac.description);\n      togglePopupGetProposal();\n    } else {\n      setIsProposalValid(false);\n      togglePopupGetProposal();\n    }\n  };\n\n  const handleClickGetWinner = async () => {\n    console.log(\"workflowstatus =>\", props.workflowStatus);\n    if (props.workflowStatus === \"4\") {\n      const winningProposal = await props.contract.methods\n        .winningProposalID()\n        .call({ from: props.accounts[0] });\n\n      console.log(\"winning proposal =>\", winningProposal);\n\n      const winner = await props.contract.methods\n        .getOneProposal(winningProposal)\n        .call({ from: props.accounts[0] });\n\n      console.log(\"winner => \", winner);\n      setIsWinner(true);\n      setWinnerDescription(winner.description);\n      setWinnerVoteCount(winner.voteCount);\n      setWinnerProposalId(winningProposal);\n      togglePopupWinner();\n    } else {\n      setIsErrorUser(true);\n      setErrorUser(\"Winner not decided Yet\");\n      togglePopupError();\n    }\n  };\n\n  return (\n    <div>\n      <h2> 📲 User dashboard</h2>\n      <p>⛔️ You must be whitelisted to use these functions ⛔️</p>\n\n      <div style={{ marginTop: 15 }}>\n        <p style={{ fontWeight: \"bold\" }}>Register your proposal:</p>\n        <input\n          style={{ width: \"60%\" }}\n          placeholder={\"Set your proposal description...\"}\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <button\n          style={{ marginLeft: 10, width: \"30%\" }}\n          onClick={() => {\n            handleClickRegisterProposals();\n          }}\n        >\n          Register your proposal\n        </button>\n      </div>\n\n      <div style={{ marginTop: 15 }}>\n        <p style={{ fontWeight: \"bold\" }}>Vote for your proposal:</p>\n        <input\n          style={{ width: \"60%\" }}\n          placeholder={\"Set your proposal ID...\"}\n          value={ID}\n          onChange={(e) => setID(e.target.value)}\n        />\n        <button\n          style={{ marginLeft: 10, width: \"30%\" }}\n          onClick={() => {\n            handleClickVote();\n          }}\n        >\n          Vote!\n        </button>\n        {isOpenError && (\n          <PopupError\n            errorUser={errorUser}\n            togglePopupError={togglePopupError}\n            isErrorUser={isErrorUser}\n          />\n        )}\n        {isOpenSuccess && (\n          <PopupSuccess\n            successUser={successUser}\n            togglePopupSuccess={togglePopupSuccess}\n            isSuccessUser={isSuccessUser}\n          />\n        )}\n      </div>\n\n      <div style={{ marginTop: 15 }}>\n        <p style={{ fontWeight: \"bold\" }}>Get informations about a Voter:</p>\n        <input\n          style={{ width: \"60%\" }}\n          placeholder={\"Set voter address...\"}\n          value={voterAddress}\n          onChange={(e) => setVoterAddress(e.target.value)}\n        />\n        <button\n          style={{ marginLeft: 10, width: \"30%\" }}\n          onClick={() => {\n            handleClickGetVoter();\n          }}\n        >\n          getVoter\n        </button>\n        {isOpenGetVoter && (\n          <PopupVoter\n            isEthAddress={isEthAddress}\n            isVoterWl={isVoterWl}\n            hasVoted={hasVoted}\n            whichProposal={whichProposal}\n            togglePopupGetVoter={togglePopupGetVoter}\n          />\n        )}\n      </div>\n\n      <div style={{ marginTop: 15 }}>\n        <p style={{ fontWeight: \"bold\" }}>Get informations about a Proposal:</p>\n        <input\n          style={{ width: \"60%\" }}\n          placeholder={\"Set proposal number...\"}\n          value={oneProposal}\n          onChange={(e) => setOneProposal(e.target.value)}\n        />\n        <button\n          style={{ marginLeft: 10, width: \"30%\" }}\n          onClick={() => {\n            handleClickGetOneProposal();\n          }}\n        >\n          getProposal\n        </button>\n        {isOpenGetProposal && (\n          <PopupProposal\n            proposalRegisteredEvents={props.proposalRegisteredEvents}\n            isProposalValid={isProposalValid}\n            oneProposal={oneProposal}\n            proposalDescription={proposalDescription}\n            voteCount={voteCount}\n            togglePopupGetProposal={togglePopupGetProposal}\n          />\n        )}\n      </div>\n\n      <div style={{ marginTop: 15, alignContent: \"center\" }}>\n        <p style={{ fontWeight: \"bold\" }}>And the winner is ...</p>\n        <button\n          style={{ width: \"30%\" }}\n          onClick={() => {\n            handleClickGetWinner();\n          }}\n        >\n          Get Winner\n        </button>\n        {isOpenWinner && (\n          <PopupWinner\n            isWinner={isWinner}\n            winnerProposalId={winnerProposalId}\n            winnerDescription={winnerDescription}\n            winnerVoteCount={winnerVoteCount}\n            togglePopupWinner={togglePopupWinner}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default UserPanel;\n","import { useState, useEffect } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport Welcome from \"./Welcome\";\nimport Connected from \"./Connected\";\nimport NoticeNoArtifact from \"./NoticeNoArtifact\";\nimport NoticeWrongNetwork from \"./NoticeWrongNetwork\";\nimport Events from \"./Events\";\nimport AdminPanel from \"./AdminPanel\";\nimport UserPanel from \"./UserPanel\";\n\nfunction Intro() {\n  const {\n    state,\n    state: { contract, accounts, address, web3 },\n  } = useEth();\n\n  const [userAddress, setUserAddress] = useState(null);\n  const [contractAddress, setContractAddress] = useState(null);\n  const [adminAddress, setAdminAddress] = useState(null);\n  const [workflowStatus, setWorkflowStatus] = useState(null);\n  const [workflowStatusChangeEvents, setWorkflowStatusChangeEvents] = useState(\n    []\n  );\n  const [whitelist, setWhitelist] = useState([]);\n  const [proposalRegisteredEvents, setProposalRegisteredEvents] = useState([]);\n  const [votedEvents, setVotedEvents] = useState([]);\n\n  useEffect(() => {\n    async function getDetails() {\n      let owner;\n      let workflowEvents;\n      let voterRegisteredEvents;\n      let proposalEvents;\n      let votes;\n\n      let options1 = {\n        fromBlock: 0, //Number || \"earliest\" || \"pending\" || \"latest\"\n        toBlock: \"latest\",\n      };\n\n      let options2 = {\n        fromBlock: \"latest\",\n      };\n\n      if (contract && accounts && address) {\n        owner = await contract.methods.owner().call();\n\n        workflowEvents = await contract.getPastEvents(\n          \"WorkflowStatusChange\",\n          options1\n        );\n\n        contract.events.WorkflowStatusChange(options2).on(\"data\", (event) => {\n          workflowEvents.push(event);\n          setWorkflowStatusChangeEvents(workflowEvents);\n          setWorkflowStatus(\n            workflowEvents[workflowEvents.length - 1].returnValues._newStatus\n          );\n          console.log(\"### workflow events listener\");\n        });\n\n        voterRegisteredEvents = await contract.getPastEvents(\n          \"VoterRegistered\",\n          options1\n        );\n\n        let wlAddresses = voterRegisteredEvents.map(\n          (object) => object.returnValues._voterAddress\n        );\n\n        contract.events.VoterRegistered(options2).on(\"data\", (event) => {\n          wlAddresses.push(event.returnValues._voterAddress);\n          setWhitelist(wlAddresses);\n          console.log(\"### whitelist events listener\");\n        });\n\n        proposalEvents = await contract.getPastEvents(\n          \"ProposalRegistered\",\n          options1\n        );\n\n        contract.events.ProposalRegistered(options2).on(\"data\", (event) => {\n          proposalEvents.push(event);\n          console.log(\"proposal listener proposalEvents =>\", proposalEvents);\n          setProposalRegisteredEvents(proposalEvents);\n          console.log(\"### proposal events listener\");\n        });\n\n        votes = await contract.getPastEvents(\"Voted\", options1);\n\n        contract.events.Voted(options2).on(\"data\", (event) => {\n          votes.push(event);\n          console.log(\"vote listener votes =>\", votes);\n          setVotedEvents(votes);\n          console.log(\"### vote events listener\");\n        });\n\n        setWhitelist(wlAddresses);\n        setUserAddress(accounts.toString());\n        setContractAddress(address);\n        setAdminAddress(owner);\n        setWorkflowStatusChangeEvents(workflowEvents);\n        if (workflowEvents.length > 0) {\n          setWorkflowStatus(\n            workflowEvents[workflowEvents.length - 1].returnValues._newStatus\n          );\n        } else {\n          setWorkflowStatus(\"0\");\n        }\n        setProposalRegisteredEvents(proposalEvents);\n        setVotedEvents(votes);\n      }\n    }\n    getDetails();\n  }, [contract, accounts, address]);\n\n  return (\n    <div>\n      <Welcome />\n      {!state.artifact ? (\n        <NoticeNoArtifact />\n      ) : !state.contract ? (\n        <NoticeWrongNetwork />\n      ) : (\n        <Connected\n          userAddress={userAddress}\n          workflowStatus={workflowStatus}\n          contractAddress={contractAddress}\n          whitelist={whitelist}\n          adminAddress={adminAddress}\n        />\n      )}\n      <hr />\n      {userAddress === adminAddress ? (\n        <AdminPanel contract={contract} accounts={accounts} web3={web3} />\n      ) : (\n        <div></div>\n      )}\n\n      <UserPanel\n        contract={contract}\n        accounts={accounts}\n        web3={web3}\n        proposalRegisteredEvents={proposalRegisteredEvents}\n        workflowStatus={workflowStatus}\n      />\n      <hr />\n      <Events\n        whitelist={whitelist}\n        workflowStatusChangeEvents={workflowStatusChangeEvents}\n        proposalRegisteredEvents={proposalRegisteredEvents}\n        votedEvents={votedEvents}\n        web3={web3}\n      />\n    </div>\n  );\n}\n\nexport default Intro;\n","function Link({ uri, text }) {\n  return (\n    <a href={uri} target=\"_blank\" rel=\"noreferrer\">\n      {text}\n    </a>\n  );\n}\n\nfunction Footer() {\n  return (\n    <footer>\n      <h2>More resources</h2>\n      <Link uri={\"https://alyra.fr/\"} text={\"Alyra\"} />\n      <Link\n        uri={\"https://github.com/mo7tr/Voting_Dapp_Truffle_Unbox_Deployment\"}\n        text={\"Project GitHub\"}\n      />\n      <Link uri={\"https://trufflesuite.com\"} text={\"Truffle\"} />\n      <Link uri={\"https://reactjs.org\"} text={\"React\"} />\n      <Link uri={\"https://soliditylang.org\"} text={\"Solidity\"} />\n      <Link uri={\"https://ethereum.org\"} text={\"Ethereum\"} />\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { EthProvider } from \"./contexts/EthContext\";\nimport Main from \"./components/Main\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <EthProvider>\n      <div id=\"App\">\n        <div className=\"container\">\n          <Main />\n          <hr />\n          <Footer />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}